import {
  Button,
  Modal,
  ModalBody,
  ModalCloseButton,
  ModalContent,
  ModalFooter,
  ModalHeader,
  ModalOverlay,
  NumberDecrementStepper,
  NumberIncrementStepper,
  NumberInput,
  NumberInputField,
  NumberInputStepper,
  Stack,
  Text,
  useDisclosure,
} from "@chakra-ui/react";
import { type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { Controller, FieldValues, useForm } from "react-hook-form";
import styles from "./index.module.css";

const Home: NextPage = () => {
  const { isOpen, onOpen, onClose } = useDisclosure();
  const {
    register,
    handleSubmit,
    formState: { errors },
    control,
  } = useForm({
    defaultValues: {
      employees: 1,
    },
  });
  const onSubmit = (data: FieldValues) => console.log(data);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.container}>
          <h1 className={styles.title}>
            Fair<span className={styles.pinkSpan}>Shift</span>
          </h1>
          <div className={styles.cardRow}>
            <div className={styles.card} onClick={onOpen}>
              <h3 className={styles.cardTitle}>Generate schedule â†’</h3>
              <div className={styles.cardText}>
                Automatic schedule generation based on your preferences.
              </div>
            </div>
          </div>
          <div className={styles.showcaseContainer}>
            <AuthShowcase />
          </div>

          <Modal isOpen={isOpen} onClose={onClose}>
            <ModalOverlay />
            <ModalContent>
              <ModalHeader>Settings</ModalHeader>
              <ModalCloseButton />
              <ModalBody>
                <Stack spacing={3}>
                  <span>
                    <Text mb="8px">Number of employees</Text>
                    <Controller
                      name="employees"
                      control={control}
                      rules={{ required: true }}
                      render={({ field }) => (
                        <NumberInput
                          focusBorderColor="purple.500"
                          errorBorderColor="red.500"
                          isInvalid={!!errors.employees}
                          {...field}
                        >
                          <NumberInputField />
                          <NumberInputStepper>
                            <NumberIncrementStepper />
                            <NumberDecrementStepper />
                          </NumberInputStepper>
                        </NumberInput>
                      )}
                    />
                    <span>
                      {errors.employees
                        ? errors.employees?.message?.toString()
                        : undefined}
                    </span>
                  </span>
                </Stack>
              </ModalBody>

              <ModalFooter>
                <Button
                  type="submit"
                  colorScheme="purple"
                  mr={3}
                  onClick={handleSubmit(onSubmit)}
                >
                  Generate
                </Button>
              </ModalFooter>
            </ModalContent>
          </Modal>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  return (
    <div className={styles.authContainer}>
      <button
        className={styles.loginButton}
        onClick={sessionData ? () => signOut() : () => signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
